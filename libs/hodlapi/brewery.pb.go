//
//https://www.openbrewerydb.org/documentation
//
//$ export GO_PATH=~/go
//$ export PATH=$PATH:/$GO_PATH/bin
//$ protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative brewery.proto
//
//
///home/j/jsoft/github.com/jbowl/hodlmybeer/hodlmybeer
//
//// cp -r . /home/j/jsoft/github.com/jbowl/findbrewery_root/dispatch/hodlapi
//
//// cp -r . /home/j/jsoft/github.com/jbowl/hodlmybeer/hodlmybeer/hodlapi  copies .git
//// cp -r . /home/j/jsoft/github.com/jbowl/hodlmybeer/brewery/hodlapi
//// cp *.go go.mod  /home/j/jsoft/github.com/jbowl/hodlmybeer/brewery/hodlapi
//cp *.go go.mod /home/j/jsoft/github.com/jbowl/hodlmybeer/hodlmybeer/hodlapi

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: brewery.proto

package hodlapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brewery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_brewery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_brewery_proto_rawDescGZIP(), []int{0}
}

func (x *Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type BreweryCountRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BreweryCountRespose) Reset() {
	*x = BreweryCountRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brewery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreweryCountRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreweryCountRespose) ProtoMessage() {}

func (x *BreweryCountRespose) ProtoReflect() protoreflect.Message {
	mi := &file_brewery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreweryCountRespose.ProtoReflect.Descriptor instead.
func (*BreweryCountRespose) Descriptor() ([]byte, []int) {
	return file_brewery_proto_rawDescGZIP(), []int{1}
}

func (x *BreweryCountRespose) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Brewery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BreweryType     string `protobuf:"bytes,3,opt,name=brewery_type,json=breweryType,proto3" json:"brewery_type,omitempty"`
	Street          string `protobuf:"bytes,4,opt,name=street,proto3" json:"street,omitempty"`
	Address_2       string `protobuf:"bytes,5,opt,name=address_2,json=address2,proto3" json:"address_2,omitempty"`
	Address_3       string `protobuf:"bytes,6,opt,name=address_3,json=address3,proto3" json:"address_3,omitempty"`
	City            string `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	State           string `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	CountryProvince string `protobuf:"bytes,9,opt,name=country_province,json=countryProvince,proto3" json:"country_province,omitempty"`
	PostalCode      string `protobuf:"bytes,10,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Country         string `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
	Longitude       string `protobuf:"bytes,12,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude        string `protobuf:"bytes,13,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Phone           string `protobuf:"bytes,14,opt,name=phone,proto3" json:"phone,omitempty"`
	WebsiteUrl      string `protobuf:"bytes,15,opt,name=website_url,json=websiteUrl,proto3" json:"website_url,omitempty"`
	UpdatedAt       string `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt       string `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Brewery) Reset() {
	*x = Brewery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brewery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brewery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brewery) ProtoMessage() {}

func (x *Brewery) ProtoReflect() protoreflect.Message {
	mi := &file_brewery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brewery.ProtoReflect.Descriptor instead.
func (*Brewery) Descriptor() ([]byte, []int) {
	return file_brewery_proto_rawDescGZIP(), []int{2}
}

func (x *Brewery) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Brewery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Brewery) GetBreweryType() string {
	if x != nil {
		return x.BreweryType
	}
	return ""
}

func (x *Brewery) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Brewery) GetAddress_2() string {
	if x != nil {
		return x.Address_2
	}
	return ""
}

func (x *Brewery) GetAddress_3() string {
	if x != nil {
		return x.Address_3
	}
	return ""
}

func (x *Brewery) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Brewery) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Brewery) GetCountryProvince() string {
	if x != nil {
		return x.CountryProvince
	}
	return ""
}

func (x *Brewery) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Brewery) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Brewery) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

func (x *Brewery) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *Brewery) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Brewery) GetWebsiteUrl() string {
	if x != nil {
		return x.WebsiteUrl
	}
	return ""
}

func (x *Brewery) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Brewery) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

var File_brewery_proto protoreflect.FileDescriptor

var file_brewery_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x68, 0x6f, 0x64, 0x6c, 0x61, 0x70, 0x69, 0x22, 0x1e, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x2b, 0x0a, 0x13, 0x42, 0x72, 0x65, 0x77,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe1, 0x03, 0x0a, 0x07, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x65,
	0x77, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x32, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xc1, 0x01, 0x0a, 0x0e, 0x42, 0x72,
	0x65, 0x77, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0f, 0x2e,
	0x68, 0x6f, 0x64, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x10,
	0x2e, 0x68, 0x6f, 0x64, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x72,
	0x65, 0x77, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x68, 0x6f, 0x64, 0x6c, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x10, 0x2e, 0x68, 0x6f, 0x64, 0x6c, 0x61,
	0x70, 0x69, 0x2e, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3d,
	0x0a, 0x0c, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0f,
	0x2e, 0x68, 0x6f, 0x64, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a,
	0x1c, 0x2e, 0x68, 0x6f, 0x64, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x1a, 0x5a,
	0x18, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x62, 0x6f, 0x77,
	0x6c, 0x2f, 0x68, 0x6f, 0x64, 0x6c, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_brewery_proto_rawDescOnce sync.Once
	file_brewery_proto_rawDescData = file_brewery_proto_rawDesc
)

func file_brewery_proto_rawDescGZIP() []byte {
	file_brewery_proto_rawDescOnce.Do(func() {
		file_brewery_proto_rawDescData = protoimpl.X.CompressGZIP(file_brewery_proto_rawDescData)
	})
	return file_brewery_proto_rawDescData
}

var file_brewery_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_brewery_proto_goTypes = []interface{}{
	(*Filter)(nil),              // 0: hodlapi.Filter
	(*BreweryCountRespose)(nil), // 1: hodlapi.BreweryCountRespose
	(*Brewery)(nil),             // 2: hodlapi.Brewery
}
var file_brewery_proto_depIdxs = []int32{
	0, // 0: hodlapi.BreweryService.ListBreweries:input_type -> hodlapi.Filter
	0, // 1: hodlapi.BreweryService.SearchBreweries:input_type -> hodlapi.Filter
	0, // 2: hodlapi.BreweryService.BreweryCount:input_type -> hodlapi.Filter
	2, // 3: hodlapi.BreweryService.ListBreweries:output_type -> hodlapi.Brewery
	2, // 4: hodlapi.BreweryService.SearchBreweries:output_type -> hodlapi.Brewery
	1, // 5: hodlapi.BreweryService.BreweryCount:output_type -> hodlapi.BreweryCountRespose
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_brewery_proto_init() }
func file_brewery_proto_init() {
	if File_brewery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_brewery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brewery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreweryCountRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brewery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brewery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_brewery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brewery_proto_goTypes,
		DependencyIndexes: file_brewery_proto_depIdxs,
		MessageInfos:      file_brewery_proto_msgTypes,
	}.Build()
	File_brewery_proto = out.File
	file_brewery_proto_rawDesc = nil
	file_brewery_proto_goTypes = nil
	file_brewery_proto_depIdxs = nil
}
